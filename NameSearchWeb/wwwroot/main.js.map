{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/PeopleSearch.Component.ts","webpack:///./src/app/Components/SearchResult.Component.ts","webpack:///./src/app/Components/Searchbox.Component.ts","webpack:///./src/app/Models/PeopleProfile.ts","webpack:///./src/app/Services/PeopleServices.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from \"@angular/core\";\r\nimport PersonProfile from \"../Models/PeopleProfile\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  template: `\r\n    <div style=\"text-align:center\">\r\n      <h1>Welcome to {{ title }}!</h1>\r\n      <div class=\"containter\">\r\n        <div class=\"page-header\">\r\n          <search-box\r\n            class=\" mx-30 \"\r\n            (loading)=\"loading = $event\"\r\n            (results)=\"updateResults($event)\"\r\n          ></search-box>\r\n\r\n          <div *ngIf=\"loading\">loading...</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <search-result\r\n        *ngFor=\"let result of results\"\r\n        [result]=\"result\"\r\n      ></search-result>\r\n    </div>\r\n  `\r\n})\r\nexport class PeopleSearchComponent {\r\n  title = \"People Search App\";\r\n  loading: boolean;\r\n  results!: PersonProfile[];\r\n  updateResults(results: PersonProfile[]): void {\r\n    this.results = results;\r\n    console.log(\"peoplesearch.results\", this.results);\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport PersonProfile from \"../Models/PeopleProfile\";\r\nimport { PeopleServices } from \"../Services/PeopleServices\";\r\n\r\n@Component({\r\n  inputs: [\"result\"],\r\n  selector: \"search-result\",\r\n  template: `\r\n    <div class=\"d-inline-flex m-3 text-white\">\r\n      <div class=\"col-xs-6   bg-primary text-white\" style=\"width: 200px;\">\r\n        <h6>{{ result.Name }} (Age:{{ result.Age }})</h6>\r\n\r\n        {{ result.Address }}\r\n      </div>\r\n\r\n      <div class=\"col-xs-6\" style=\"height:160px;\">\r\n        <img\r\n          *ngIf=\"hasImage\"\r\n          id=\"{{ result.Id }}\"\r\n          src=\"{{ result.ThumbNailURI }}\"\r\n          width=\"200\"\r\n          height=\"160\"\r\n        />\r\n\r\n        <img\r\n          *ngIf=\"!hasImage\"\r\n          id=\"{{ result.Id }}\"\r\n          src=\"https://localhost:44310/photos/noimage.jpg\"\r\n          width=\"200\"\r\n          height=\"160\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"col-xs-6 text-white\" style=\"width: 300px;\">\r\n        <input\r\n          #imageInput\r\n          type=\"file\"\r\n          accept=\"image/jpeg\"\r\n          (change)=\"processFile(imageInput)\"\r\n        />\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class SearchResultComponent implements OnInit {\r\n  result!: PersonProfile;\r\n  hasImage: boolean;\r\n  selectedFile: ImageSnippet;\r\n\r\n  constructor(@Inject(PeopleServices) public peopleService: PeopleServices) {}\r\n\r\n  ngOnInit() {\r\n    this.hasImage = this.result.PicturePath != null;\r\n  }\r\n\r\n  processFile(imageInput: any) {\r\n    const file: File = imageInput.files[0];\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.addEventListener(\"load\", (event: any) => {\r\n      this.selectedFile = new ImageSnippet(event.target.result, file);\r\n\r\n      this.peopleService\r\n        .uploadImage(this.selectedFile.file, this.result.PhotoUploadURI)\r\n        .subscribe(\r\n          res => {\r\n            console.log(\"res\", res);\r\n\r\n            console.log(\"blah\", this.result.ThumbNailURI);\r\n\r\n            document\r\n              .getElementById(`${this.result.Id}`)\r\n              .setAttribute(\"src\", res[\"_body\"]);\r\n          },\r\n          err => {}\r\n        );\r\n    });\r\n\r\n    if (file.type != \"image/jpeg\") alert(\"please select a jpeg image\");\r\n    else reader.readAsDataURL(file);\r\n  }\r\n}\r\n\r\nclass ImageSnippet {\r\n  constructor(public src: string, public file: File) {}\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Inject,\r\n  ElementRef\r\n} from \"@angular/core\";\r\nimport PersonProfile from \"../Models/PeopleProfile\";\r\nimport { PeopleServices } from \"../Services/PeopleServices\";\r\nimport { fromEvent } from \"rxjs\";\r\nimport { map, filter, debounceTime, tap, switchAll } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  outputs: [\"loading\", \"results\"],\r\n  selector: \"search-box\",\r\n  template: `\r\n    <div class=\"d-flex justify-content-center\">\r\n      <input type=\"text\" class=\"mx-3\" placeholder=\"Search by name\" autofocus />\r\n      <input type=\"button\" value=\"Show All People\" (click)=\"GetAllPeople()\" />\r\n    </div>\r\n  `\r\n})\r\nexport class SearchBoxComponent implements OnInit {\r\n  loading: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  results: EventEmitter<PersonProfile[]> = new EventEmitter<PersonProfile[]>();\r\n\r\n  constructor(\r\n    @Inject(PeopleServices) public peopleService: PeopleServices,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  public GetAllPeople() {\r\n    this.peopleService.search(\"\").subscribe(\r\n      (results: PersonProfile[]) => {\r\n        this.loading.next(false);\r\n        this.results.next(results);\r\n      },\r\n      (err: any) => {\r\n        console.log(\"error:\", err);\r\n        this.loading.next(false);\r\n      },\r\n      () => {\r\n        this.loading.next(false);\r\n      }\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, \"keyup\")\r\n      .pipe(\r\n        map((e: any) => e.target.value),\r\n        filter((text: string) => text.length > 1),\r\n        debounceTime(400),\r\n        tap(() => this.loading.next(true)),\r\n        map((query: string) => this.peopleService.search(query)),\r\n        switchAll()\r\n      )\r\n      .subscribe(\r\n        (results: PersonProfile[]) => {\r\n          this.loading.next(false);\r\n          this.results.next(results);\r\n        },\r\n        (err: any) => {\r\n          console.log(\"error:\", err);\r\n          this.loading.next(false);\r\n        },\r\n        () => {\r\n          this.loading.next(false);\r\n        }\r\n      );\r\n  }\r\n}\r\n","export default class PersonProfile {\r\n  Id: number;\r\n  Name: string;\r\n  Address: string;\r\n  Age: number;\r\n  PicturePath: string;\r\n  PhotoUploadURI: string;\r\n  ThumbNailURI: string;\r\n  Interests: string[];\r\n  constructor(obj?: any) {\r\n    this.Id = obj.Id;\r\n    this.Name = obj.Name;\r\n    this.Address = obj.Address;\r\n    this.Age = obj.Age;\r\n    this.PicturePath = obj.PicturePath;\r\n    this.ThumbNailURI = obj.ThumbNailURI;\r\n    this.PhotoUploadURI = obj.PhotoUploadURI;\r\n    this.Interests = obj.Interests;\r\n  }\r\n}\r\n","import { Injectable, Inject } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  map,\r\n  filter,\r\n  debounceTime,\r\n  catchError,\r\n  switchAll,\r\n  tap\r\n} from \"rxjs/operators\";\r\nimport PersonProfile from \"../Models/PeopleProfile\";\r\n\r\n@Injectable()\r\nexport class PeopleServices {\r\n  apiUrl = \"https://localhost:44310/api/people\";\r\n  photosUrl = \"https://localhost:44310/photos\";\r\n  constructor(public http: Http) {}\r\n\r\n  uploadImage(image: File, queryUrl: string): Observable<Response> {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"file\", image);\r\n\r\n    return this.http.post(queryUrl, formData);\r\n  }\r\n\r\n  search(name: string): Observable<PersonProfile[]> {\r\n    let queryUrl: string = `${this.apiUrl}?name=${name}`;\r\n\r\n    return this.http.get(queryUrl).pipe(\r\n      map((response: Response) => {\r\n        if (response.status === 200) {\r\n          return (<any>response.json()).map(item => {\r\n            console.log(item);\r\n            return new PersonProfile({\r\n              Id: item.id,\r\n              Name: item.name,\r\n              Address: item.address,\r\n              Age: item.age,\r\n              PicturePath: item.picturePath,\r\n              PhotoUploadURI: item.photoUploadURI,\r\n              ThumbNailURI: `${this.photosUrl}/${item.picturePath}.jpg`,\r\n              Interests: item.interests\r\n            });\r\n          });\r\n        } else {\r\n          throw new Error(\"calling serviee failed.\");\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"./app.component\";\nimport { PeopleSearchComponent } from \"./Components/PeopleSearch.Component\";\nimport { SearchBoxComponent } from \"./Components/Searchbox.Component\";\nimport { SearchResultComponent } from \"./Components/SearchResult.Component\";\nimport { PeopleServices } from \"./Services/PeopleServices\";\nimport { HttpModule } from \"@angular/http\";\n//import { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    // AppComponent,\n    PeopleSearchComponent,\n    SearchBoxComponent,\n    SearchResultComponent\n  ],\n  imports: [\n    /*\n    RouterModule.forRoot([\n      { path: '', redirectTo: 'search', pathMatch: 'full' },\n      { path: 'search', component: PeopleSearchComponent},\n      { path: 'photoupload', component: PhotoUploadComponent },\n    ]),*/\n    BrowserModule,\n    HttpModule\n  ],\n  providers: [{ provide: PeopleServices, useClass: PeopleServices }],\n  bootstrap: [PeopleSearchComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}